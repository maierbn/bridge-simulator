
---------- Input parameters ------------
3 node_positions: [[0, 0], [5, 0], [2, 2]]
2 elements: [[0, 2], [1, 2]]
2 loads: [[4, 1], [5, 0.5]]
4 fixed_dofs: [0, 1, 2, 3]
parameter EA =  10
counting criterion:  4 + 2 - 2 * 3 = 0
 -> statically determined (statisch bestimmt)

id_matrix:
[[0 2]
 [1 3]
 [4 4]
 [5 5]]

----- assemble global stiffness matrix from local matrices -----
   - element  0 , angle  45.0 , length  2.82842712475
   - element  1 , angle  146.309932474 , length  3.60555127546

global stiffness matrix k_global:
[[ 1.76776695  1.76776695  0.          0.         -1.76776695 -1.76776695]
 [ 1.76776695  1.76776695  0.          0.         -1.76776695 -1.76776695]
 [ 0.          0.          1.92011606 -1.28007738 -1.92011606  1.28007738]
 [ 0.          0.         -1.28007738  0.85338492  1.28007738 -0.85338492]
 [-1.76776695 -1.76776695 -1.92011606  1.28007738  3.68788302  0.48768958]
 [-1.76776695 -1.76776695  1.28007738 -0.85338492  0.48768958  2.62115187]]

global right hand side load vector f:
[[ 0. ]
 [ 0. ]
 [ 0. ]
 [ 0. ]
 [ 1. ]
 [ 0.5]]

----- reduce system by removing fixed dofs -----
k_global_reduced:
[[ 3.68788302  0.48768958]
 [ 0.48768958  2.62115187]]

f reduced:
[[ 1. ]
 [ 0.5]]

----- solve system k*u = f for u -----
number of nonfixed dofs:  2 , rank of stiffness matrix:  2
(these numbers should be equal, otherwise the system is not statically determined)
solution (u reduced):
[[ 0.25213625]
 [ 0.14384355]]

----- recover full sized u by inserting 0's -----
, u recovered:
[ 0.          0.          0.          0.          0.25213625  0.14384355]

----- plot -----
Created file "out_dof2_el2_n3.png".
